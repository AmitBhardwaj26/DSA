class Solution {
public:
    long long dp[4001][1001];
    int M=1e9+7;
    long long solve(int i,int e,int k)
    {
        if(k==0 && i==e) return 1;
        else if(k==0) return 0; 
            
        if(dp[i+1000][k]!=-1) return dp[i+1000][k];
        
        long long ans=0;
        // if(i==0 ) ans=solve(i+1,e,k-1);
        // else 
            ans=solve(i+1,e,k-1)+solve(i-1,e,k-1);
        return dp[i+1000][k]=ans%M;
    }
    
    int numberOfWays(int s, int e, int k) {
        
        memset(dp,-1,sizeof(dp));
        return solve(s,e,k);
        // return dp[e][k];
    }
};
