/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> ans;
        
        queue<Node*> q; 
        q.push(root);
        while(!q.empty() && root!=NULL)
        {
              int x=q.size();
            vector<int> z;
            while(x>0 )
            {
                Node *t=q.front(); q.pop();
                
                vector<Node*> v=t->children;
                
                for(int i=0;i<v.size();i++)
                {
                    q.push(v[i]);
                }
                z.push_back(t->val);
                x--;
            }
            ans.push_back(z);
        }
        return ans;
    }
};
