class Solution {
public:
    int maxPerformance(int n, vector<int>& s, vector<int>& ef, int k) {
        vector<pair<long,int>> v;
        int M=1e9+7;
        for(int i=0;i<n;i++)
        {
            v.push_back({ef[i],s[i]});
        }
        sort(v.begin(),v.end());
        priority_queue<int, vector<int>, greater<int> > pq;
        long long ans=0,sum=0,e=0;
        for(int i=n-1;i>=0;i--)
        {
            pq.push(v[i].second);
            if(pq.size()>k)
            {
               sum-= pq.top();
                pq.pop();
            }
            sum+=v[i].second;
            e=v[i].first;
            ans=max(ans,e*sum);
            
        }
        return ans%M;
    }
};
